# Observações importantes:
# 
# DocumentRoot do Apache:
# No meu Dockerfile, eu já configurei o DocumentRoot para /var/www/html/public, que é o correto para Laravel.
#
# Permissões:
# O comando chown e chmod garante que o Apache consiga acessar storage, bootstrap/cache e demais diretórios do Laravel.
#
# Acesso:
# Laravel: http://localhost:8080
# phpMyAdmin: http://localhost:8081
# Usuário root / senha: toor
#
# .env do Laravel:
# Certifique-se que o .env contém as configurações corretas de banco de dados e APP_KEY

services:
  # Serviço para o PHP + Apache
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-app
    ports:
      - "8080:80"
    volumes:
      - ./src:/var/www/html
    depends_on:
      - db
    environment:
      MYSQL_HOST: db
      MYSQL_USER: root
      MYSQL_PASSWORD: toor
      MYSQL_DATABASE: laravel_db
    networks:
      - app-network
    command: >
      bash -c "chown -R www-data:www-data /var/www/html &&
               chmod -R 755 /var/www/html &&
               apache2-foreground"

  # Serviço para o MySQL
  db:
    image: mysql:5.7
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: toor
      MYSQL_DATABASE: laravel_db
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - app-network

  # Serviço para o phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: toor
    ports:
      - "8081:80"
    networks:
      - app-network

  # Serviço para o Git
  git:
    image: alpine/git
    container_name: git
    volumes:
      - ./src:/workspace
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
